{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NeXus azint writer","text":"<p>azint-writer is a Python package for writing HDF5 files in the NXazint1d or NXazint2d format, a new extension to the NeXus standard. The NXazint1d (NXazint2d) format is specifically designed for storing data related to azimuthal integration in diffraction experiments.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>HDF5 File Writing: Easily generate NeXus-compliant HDF5 files.</li> <li>azint-writer Format: Supports the new azint-writer format for azimuthal integration.</li> <li>Customizable Configuration: Flexible options for writing metadata and experimental data.</li> <li>Seamless Integration: Compatible with existing NeXus tools and libraries.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Install azint-writer via <code>conda</code>:</p> <pre><code>conda install -c maxiv azint-writer\n</code></pre>"},{"location":"#azint-writer-format","title":"azint-writer Format","text":"<ul> <li>Experiment Metadata: Beamline details, sample information, and experimental setup.</li> <li>Azimuthal Integration Data: One-dimensional and two-dimensional (cake) integration results.</li> <li>Calibration Information: Detector geometry and calibration parameters.</li> </ul> <p>For more information about the NeXus standard, see the official documentation.</p>"},{"location":"#example-usage","title":"Example Usage","text":"<p>Here is a sample Python snippet using azint-writer:</p> <pre><code>import azint, azint_writer, h5py\nimport numpy as np\n\nh5name = \"lab6-lab6_6_master.h5\"\nh = h5py.File(h5name, 'r')\nimg = h['/entry/data/data_000001'][0]\nponi = '78.poni'\nmsk = np.zeros(img.shape, dtype=np.uint8)  # a NumPy array\n\nconfig = {\n    'poni': poni,\n    'mask': msk,\n    'radial_bins': 500,\n    'azimuth_bins': 180,\n    'n_splitting': 2,\n    'error_model': 'poisson',\n    'solid_angle': True,\n    'polarization_factor': 0.99997,\n    'normalized': True,\n    'unit': '2th',\n}\n\nai = azint.AzimuthalIntegrator(**config)\ndata = ai.integrate(img)\n\ninit_writer_config = {\n    'ai': ai,\n    'output_file': 'nxazin_2D.h5',\n    'write_1d': False,\n    'write_2d': True,\n    'instrument_name': 'DanMAX',\n    'source_name': 'MAX IV',\n    'source_type': 'Synchrotron X-ray Source',\n    'source_probe': 'x-ray',\n}\n\nnx = azint_writer.NXWriter(**init_writer_config)\nnx.add_data(data)\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome and encourage contributions to azint-writer! Here's how you can get involved:</p> <ul> <li>Fork the repository.</li> <li>Create a new branch for your feature or bug fix.</li> <li>Submit a pull request with a clear and concise description of your changes.</li> </ul> <p>Please make sure your contributions follow the NeXus standard guidelines, especially when adding features related to <code>azint-writer</code>.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE file on GitHub for details.</p>"},{"location":"#support","title":"Support","text":"<p>If you encounter any issues, have questions, or would like to suggest improvements, feel free to open an issue on the project\u2019s GitHub issue tracker.</p>"},{"location":"class-reference/","title":"azint","text":""}]}